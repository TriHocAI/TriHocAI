import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

class Multivariate_Linear_Regression():
  def __init__(self, learning_rate = 0.000000001, n_iters = 100000):
    self.lr = learning_rate
    self.n_iters = n_iters
    self.weights = None
    self.bias = None

  def fit(self, X, y):
    n_samples, n_features = np.shape(X)

    self.weights = np.zeros(n_features)
    self.bias = 0

    for _ in range(self.n_iters):
      y_predicted = np.dot(X, self.weights) + self.bias

      dw = (1/n_samples) * np.dot(np.transpose(X), (y_predicted - y))
      db = (1/n_samples) * sum(y_predicted - y)

      self.weights -= self.lr * dw
      self.bias -= self.lr * db

  def predict(self, X):
    y_approximated = np.dot(X, self.weights) + self.bias
    return y_approximated

file_path = 'Housing.csv'
data = pd.read_csv(file_path)

X = data[['area', 'bedrooms', 'stories']]
y = data['price']
X = X.to_numpy()
model = Multivariate_Linear_Regression()
model.fit(X, y)

plt.scatter(X[:,0], y, color = 'blue')
plt.plot(X[:,0], model.predict(X), color = 'red')
plt.xlabel('Area(fts square)')
plt.ylabel('price')
plt.show()


#Link basebase (https://drive.google.com/file/d/158jEjhTZc-MWY4YY04eylv5tCGrtHkWf/view?usp=sharing)
